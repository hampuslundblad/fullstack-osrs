// <auto-generated />
using DotnetComp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotnetComp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250123160437_AddAuthProviderToUser3")]
    partial class AddAuthProviderToUser3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("DotnetComp.Models.Entities.AuthProviderEntity", b =>
                {
                    b.Property<int>("AuthProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthProviderUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AuthProviderId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AuthProviders");
                });

            modelBuilder.Entity("DotnetComp.Models.Entities.GroupEntity", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DotnetComp.Models.Entities.PlayerEntity", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperienceGainedLast24H")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperienceGainedLastWeek")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DotnetComp.Models.Entities.UserEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GroupEntityPlayerEntity", b =>
                {
                    b.Property<int>("GroupsGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayersPlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupsGroupId", "PlayersPlayerId");

                    b.HasIndex("PlayersPlayerId");

                    b.ToTable("GroupEntityPlayerEntity");
                });

            modelBuilder.Entity("DotnetComp.Models.Entities.AuthProviderEntity", b =>
                {
                    b.HasOne("DotnetComp.Models.Entities.UserEntity", "User")
                        .WithOne("AuthProvider")
                        .HasForeignKey("DotnetComp.Models.Entities.AuthProviderEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotnetComp.Models.Entities.GroupEntity", b =>
                {
                    b.HasOne("DotnetComp.Models.Entities.UserEntity", "User")
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GroupEntityPlayerEntity", b =>
                {
                    b.HasOne("DotnetComp.Models.Entities.GroupEntity", null)
                        .WithMany()
                        .HasForeignKey("GroupsGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetComp.Models.Entities.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("PlayersPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DotnetComp.Models.Entities.UserEntity", b =>
                {
                    b.Navigation("AuthProvider")
                        .IsRequired();

                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
